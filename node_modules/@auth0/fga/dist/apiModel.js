"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * JavaScript and Node.js SDK for Auth0 Fine Grained Authorization (FGA)
 *
 * API version: 0.1
 * Website: https://fga.dev
 * Documentation: https://docs.fga.dev
 * Support: https://discord.gg/8naAwJfWN6
 * License: [MIT](https://github.com/auth0-lab/fga-js-sdk/blob/main/LICENSE)
 *
 * NOTE: This file was auto generated by OpenAPI Generator (https://openapi-generator.tech). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TupleOperation = exports.ResourceExhaustedErrorCode = exports.NotFoundErrorCode = exports.InternalErrorCode = exports.ErrorCode = exports.AuthErrorCode = void 0;
/**
 * - no_auth_error: no error  - auth_failure: generic authentication error. Details available via message field.  - auth_failed_invalid_subject: authentication failure due to invalid subject.  - auth_failed_invalid_audience: authentication failure due to invalid audience.  - auth_failed_invalid_issuer: authentication failure due to invalid issuer.  - invalid_claims: authentication failure due to invalid claims.  - auth_failed_invalid_bearer_token: authentication failure due to invalid bearer token.  - missing_customer_in_bearer_token: authentication failure with customer id missing in bearer token.  - missing_store_in_bearer_token: authentication failure with store id missing in bearer token.  - store_mismatch_in_bearer_token: authentication failure due to store mismatch from bearer token.  - customer_mismatch_in_bearer_token: authentication failure due to customer id in the request being different from the customer id in the bearer token.  - bearer_token_missing: bearer token missing in request.  - unauthenticated: unauthenticated.  - insufficient_permissions: insufficient permissions.  - unauthorized_principal: authentication denial due to unauthorized principal.
 * @export
 * @enum {string}
 */
var AuthErrorCode;
(function (AuthErrorCode) {
    AuthErrorCode["NoAuthError"] = "no_auth_error";
    AuthErrorCode["AuthFailure"] = "auth_failure";
    AuthErrorCode["AuthFailedInvalidSubject"] = "auth_failed_invalid_subject";
    AuthErrorCode["AuthFailedInvalidAudience"] = "auth_failed_invalid_audience";
    AuthErrorCode["AuthFailedInvalidIssuer"] = "auth_failed_invalid_issuer";
    AuthErrorCode["InvalidClaims"] = "invalid_claims";
    AuthErrorCode["AuthFailedInvalidBearerToken"] = "auth_failed_invalid_bearer_token";
    AuthErrorCode["MissingCustomerInBearerToken"] = "missing_customer_in_bearer_token";
    AuthErrorCode["MissingStoreInBearerToken"] = "missing_store_in_bearer_token";
    AuthErrorCode["StoreMismatchInBearerToken"] = "store_mismatch_in_bearer_token";
    AuthErrorCode["CustomerMismatchInBearerToken"] = "customer_mismatch_in_bearer_token";
    AuthErrorCode["BearerTokenMissing"] = "bearer_token_missing";
    AuthErrorCode["Unauthenticated"] = "unauthenticated";
    AuthErrorCode["InsufficientPermissions"] = "insufficient_permissions";
    AuthErrorCode["UnauthorizedPrincipal"] = "unauthorized_principal";
})(AuthErrorCode = exports.AuthErrorCode || (exports.AuthErrorCode = {}));
/**
 * - no_error: no error  - validation_error: generic validation error.  - authorization_model_not_found: authorization model not found.  - authorization_model_resolution_too_complex: too many rewrite rules to be resolved.  - invalid_write_input: invalid write input.  - cannot_allow_duplicate_tuples_in_one_request: duplicate tuples in one request.  - cannot_allow_duplicate_types_in_one_request: duplicate types in one request.  - cannot_allow_multiple_references_to_one_relation: cannot use a relation to define itself.  - invalid_continuation_token: invalid continuation token.  - invalid_tuple_set: invalid tuple set.  - invalid_check_input: invalid check input.  - invalid_expand_input: invalid expand input.  - unsupported_user_set: unsupported user set.  - invalid_object_format: invalid object format.  - token_issuer_already_registered: token issuers already registered.  - tos_agreement_already_signed: agreement already signed.  - write_failed_due_to_invalid_input: write request failed due to invalid input.  - authorization_model_assertions_not_found: no assertions found for authorization model.  - latest_authorization_model_not_found: latest authorization model not found.  - type_not_found: type not found.  - relation_not_found: relation not found.  - empty_relation_definition: empty relation definition.  - invalid_user: invalid user.  - invalid_token_issuer: invalid token issuer.  - invalid_tuple: invalid tuple.  - unknown_relation: unknown relation.  - store_id_invalid_length: store id has invalid length.  - issuer_url_invalid_uri: issuer url has invalid URI.  - issuer_url_required_absolute_path: issuer url is not absolute path.  - assertions_too_many_items: assertions have too many items.  - id_too_long: ID is too long.  - invalid_environment: invalid environment is specified.  - authorization_model_id_too_long: authorization model id is too long.  - tuple_key_value_not_specified: tuple key value is not specified.  - tuple_keys_too_many_or_too_few_items: tuple keys have too few or too many items.  - page_size_invalid: page size is outside of acceptable range.  - param_missing_value: params value is missing.  - difference_base_missing_value: difference\'s base value is missing.  - subtract_base_missing_value: subtract base value is missing.  - object_too_long: object length is too long.  - relation_too_long: relation length is too long.  - type_definitions_too_few_items: type definitions do not have enough item.  - type_invalid_length: type length is invalid.  - type_invalid_pattern: type does not match expected pattern.  - relations_too_few_items: relations have too few items.  - relations_too_long: relations\' length is too long.  - relations_invalid_pattern: relations do not match expected pattern.  - object_invalid_pattern: object does not match expected pattern.  - query_string_type_continuation_token_mismatch: type in the query string and the continuation token don\'t match.  - exceeded_entity_limit: Reached maximum number of <entity>.  - invalid_contextual_tuple: Invalid contextual tuple.  - duplicate_contextual_tuple: Duplicate contextual tuple.
 * @export
 * @enum {string}
 */
var ErrorCode;
(function (ErrorCode) {
    ErrorCode["NoError"] = "no_error";
    ErrorCode["ValidationError"] = "validation_error";
    ErrorCode["AuthorizationModelNotFound"] = "authorization_model_not_found";
    ErrorCode["AuthorizationModelResolutionTooComplex"] = "authorization_model_resolution_too_complex";
    ErrorCode["InvalidWriteInput"] = "invalid_write_input";
    ErrorCode["CannotAllowDuplicateTuplesInOneRequest"] = "cannot_allow_duplicate_tuples_in_one_request";
    ErrorCode["CannotAllowDuplicateTypesInOneRequest"] = "cannot_allow_duplicate_types_in_one_request";
    ErrorCode["CannotAllowMultipleReferencesToOneRelation"] = "cannot_allow_multiple_references_to_one_relation";
    ErrorCode["InvalidContinuationToken"] = "invalid_continuation_token";
    ErrorCode["InvalidTupleSet"] = "invalid_tuple_set";
    ErrorCode["InvalidCheckInput"] = "invalid_check_input";
    ErrorCode["InvalidExpandInput"] = "invalid_expand_input";
    ErrorCode["UnsupportedUserSet"] = "unsupported_user_set";
    ErrorCode["InvalidObjectFormat"] = "invalid_object_format";
    ErrorCode["TokenIssuerAlreadyRegistered"] = "token_issuer_already_registered";
    ErrorCode["TosAgreementAlreadySigned"] = "tos_agreement_already_signed";
    ErrorCode["WriteFailedDueToInvalidInput"] = "write_failed_due_to_invalid_input";
    ErrorCode["AuthorizationModelAssertionsNotFound"] = "authorization_model_assertions_not_found";
    ErrorCode["LatestAuthorizationModelNotFound"] = "latest_authorization_model_not_found";
    ErrorCode["TypeNotFound"] = "type_not_found";
    ErrorCode["RelationNotFound"] = "relation_not_found";
    ErrorCode["EmptyRelationDefinition"] = "empty_relation_definition";
    ErrorCode["InvalidUser"] = "invalid_user";
    ErrorCode["InvalidTokenIssuer"] = "invalid_token_issuer";
    ErrorCode["InvalidTuple"] = "invalid_tuple";
    ErrorCode["UnknownRelation"] = "unknown_relation";
    ErrorCode["StoreIdInvalidLength"] = "store_id_invalid_length";
    ErrorCode["IssuerUrlInvalidUri"] = "issuer_url_invalid_uri";
    ErrorCode["IssuerUrlRequiredAbsolutePath"] = "issuer_url_required_absolute_path";
    ErrorCode["AssertionsTooManyItems"] = "assertions_too_many_items";
    ErrorCode["IdTooLong"] = "id_too_long";
    ErrorCode["InvalidEnvironment"] = "invalid_environment";
    ErrorCode["AuthorizationModelIdTooLong"] = "authorization_model_id_too_long";
    ErrorCode["TupleKeyValueNotSpecified"] = "tuple_key_value_not_specified";
    ErrorCode["TupleKeysTooManyOrTooFewItems"] = "tuple_keys_too_many_or_too_few_items";
    ErrorCode["PageSizeInvalid"] = "page_size_invalid";
    ErrorCode["ParamMissingValue"] = "param_missing_value";
    ErrorCode["DifferenceBaseMissingValue"] = "difference_base_missing_value";
    ErrorCode["SubtractBaseMissingValue"] = "subtract_base_missing_value";
    ErrorCode["ObjectTooLong"] = "object_too_long";
    ErrorCode["RelationTooLong"] = "relation_too_long";
    ErrorCode["TypeDefinitionsTooFewItems"] = "type_definitions_too_few_items";
    ErrorCode["TypeInvalidLength"] = "type_invalid_length";
    ErrorCode["TypeInvalidPattern"] = "type_invalid_pattern";
    ErrorCode["RelationsTooFewItems"] = "relations_too_few_items";
    ErrorCode["RelationsTooLong"] = "relations_too_long";
    ErrorCode["RelationsInvalidPattern"] = "relations_invalid_pattern";
    ErrorCode["ObjectInvalidPattern"] = "object_invalid_pattern";
    ErrorCode["QueryStringTypeContinuationTokenMismatch"] = "query_string_type_continuation_token_mismatch";
    ErrorCode["ExceededEntityLimit"] = "exceeded_entity_limit";
    ErrorCode["InvalidContextualTuple"] = "invalid_contextual_tuple";
    ErrorCode["DuplicateContextualTuple"] = "duplicate_contextual_tuple";
})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));
/**
 * - no_internal_error: no error  - internal_error: generic internal error.  - auth_internal_error: internal error due to authentication error.  - auth_failed_error_fetching_well_known_jwks: authentication failure due to internal error in fetching well-known/jwks.json.  - cancelled: internal error - request being cancelled.  - deadline_exceeded: internal error - deadline exceeded.  - already_exists: internal error - already exists.  - resource_exhausted: internal error - resource exhausted.  - failed_precondition: internal error - failed precondition.  - aborted: internal error - aborted.  - out_of_range: internal error - out of range.  - unavailable: internal error - unavailable.  - data_loss: internal error - data loss.
 * @export
 * @enum {string}
 */
var InternalErrorCode;
(function (InternalErrorCode) {
    InternalErrorCode["NoInternalError"] = "no_internal_error";
    InternalErrorCode["InternalError"] = "internal_error";
    InternalErrorCode["AuthInternalError"] = "auth_internal_error";
    InternalErrorCode["AuthFailedErrorFetchingWellKnownJwks"] = "auth_failed_error_fetching_well_known_jwks";
    InternalErrorCode["Cancelled"] = "cancelled";
    InternalErrorCode["DeadlineExceeded"] = "deadline_exceeded";
    InternalErrorCode["AlreadyExists"] = "already_exists";
    InternalErrorCode["ResourceExhausted"] = "resource_exhausted";
    InternalErrorCode["FailedPrecondition"] = "failed_precondition";
    InternalErrorCode["Aborted"] = "aborted";
    InternalErrorCode["OutOfRange"] = "out_of_range";
    InternalErrorCode["Unavailable"] = "unavailable";
    InternalErrorCode["DataLoss"] = "data_loss";
})(InternalErrorCode = exports.InternalErrorCode || (exports.InternalErrorCode = {}));
/**
 * - no_not_found_error: no error  - undefined_endpoint: undefined endpoint.  - customer_id_not_found: customer ID is not found.  - store_id_not_found: store ID not found  - store_client_id_not_found: store client ID not found.  - resource_not_found: generic not found.  - unimplemented: method is unimplemented
 * @export
 * @enum {string}
 */
var NotFoundErrorCode;
(function (NotFoundErrorCode) {
    NotFoundErrorCode["NoNotFoundError"] = "no_not_found_error";
    NotFoundErrorCode["UndefinedEndpoint"] = "undefined_endpoint";
    NotFoundErrorCode["CustomerIdNotFound"] = "customer_id_not_found";
    NotFoundErrorCode["StoreIdNotFound"] = "store_id_not_found";
    NotFoundErrorCode["StoreClientIdNotFound"] = "store_client_id_not_found";
    NotFoundErrorCode["ResourceNotFound"] = "resource_not_found";
    NotFoundErrorCode["Unimplemented"] = "unimplemented";
})(NotFoundErrorCode = exports.NotFoundErrorCode || (exports.NotFoundErrorCode = {}));
/**
 * - no_resource_exhausted_error: no error  - rate_limit_exceeded: operation failed due to exceeding rate limit.  - auth_rate_limit_exceeded: rate limit error during authentication.
 * @export
 * @enum {string}
 */
var ResourceExhaustedErrorCode;
(function (ResourceExhaustedErrorCode) {
    ResourceExhaustedErrorCode["NoResourceExhaustedError"] = "no_resource_exhausted_error";
    ResourceExhaustedErrorCode["RateLimitExceeded"] = "rate_limit_exceeded";
    ResourceExhaustedErrorCode["AuthRateLimitExceeded"] = "auth_rate_limit_exceeded";
})(ResourceExhaustedErrorCode = exports.ResourceExhaustedErrorCode || (exports.ResourceExhaustedErrorCode = {}));
/**
 *
 * @export
 * @enum {string}
 */
var TupleOperation;
(function (TupleOperation) {
    TupleOperation["Write"] = "TUPLE_OPERATION_WRITE";
    TupleOperation["Delete"] = "TUPLE_OPERATION_DELETE";
})(TupleOperation = exports.TupleOperation || (exports.TupleOperation = {}));
